# -*- coding: utf-8 -*-
"""CNN Autoencoder.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1pTxN6tvud3eF4d6OdW1JFCwBdXrTq7S2
"""

import numpy as np
import pandas as pd
import os
import matplotlib.pyplot as plt
from keras.datasets import mnist
from keras.layers import Input,Dense,Conv2D,MaxPooling2D,UpSampling2D,Conv2DTranspose
from keras.models import Model
from keras.preprocessing import image

(X_train,_),(X_test,_)=mnist.load_data()

print("X_train",X_train.shape)
print("X_test",X_test.shape)

def pre_process(X):
  X=X/255.0
  X=X.reshape((len(X),784))
  return X

X_train=pre_process(X_train)
X_test=pre_process(X_test)

print("X_train",X_train.shape)
print("X_test",X_test.shape)

input_dim,output_dim=784, 784
encode_dim=100
hidden_dim=256

input_layer=Input(shape=(input_dim),name="INPUT")
hidden_layer_1=Dense(hidden_dim,activation='relu',name="HIDDEN_1")(input_layer)

code_layer=Dense(encode_dim,activation='relu',name="CODE")(hidden_layer_1)

hidden_layer_2=Dense(hidden_dim,activation='relu',name="HIDDEN_2")(code_layer)
output_layer=Dense(output_dim,activation='sigmoid',name="OUTPUT")(hidden_layer_2)

AE=Model(input_layer,output_layer)
AE.compile(optimizer='adam',loss='binary_crossentropy')
AE.summary()

AE.fit(X_train,X_train,epochs=10)

decoded_data=AE.predict(X_test)

get_encoded_data=Model(inputs=AE.input,outputs=AE.get_layer("CODE").output)

encoded_data=get_encoded_data.predict(X_test)

def show_data(X, n=10, height=28, width=28, title=""):
    plt.figure(figsize=(10, 3))
    for i in range(n):
        ax = plt.subplot(2,n,i+1)
        plt.imshow(X[i].reshape((height,width)))
        plt.gray()
        ax.get_xaxis().set_visible(False)
        ax.get_yaxis().set_visible(False)
    plt.suptitle(title, fontsize = 20)

show_data(X_test,title="original data")
show_data(encoded_data,height=10,width=10,title="encoded data")
show_data(decoded_data,title="decoded data")